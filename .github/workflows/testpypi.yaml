name: Publish to TestPyPI

on:
  push:
    branches: ["pypi"]

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
          - os: windows-intel
            runs-on: windows-latest
          - os: windows-arm
            runs-on: windows-11-arm
#          - os: macos-intel
#            # macos-13 was the last x86_64 runner
#            runs-on: macos-13
#          - os: macos-arm
#            runs-on: macos-latest

    steps:
#      - name: Provide gfortran (macOS)
#        if: runner.os == 'macOS'
#        run: |
#          sudo ln -s $(which gfortran-${{ matrix.version }}) $(dirname $(which gfortran-${{ matrix.version }}))/gfortran
#          which gfortran && gfortran --version
      - name: Provide gfortran (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
      - name: Tell distutils to use mingw (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_source_distribution:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: [build_wheels, build_source_distribution]
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/