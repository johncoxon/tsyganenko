"""tsyganenko module

This module contains the following object:

Functions
--------------------------------------------------
generate_test       Generate new unit tests easily
--------------------------------------------------

Classes
--------------------------------------------------------------
tsygTraceTestCase   Tests whether NH/SH traces are as expected
--------------------------------------------------------------
"""
import unittest
import datetime as dt
import numpy as np
from tsyganenko import tsygTrace

def generate_test(lat, lon, rho):
    """Generate a string to paste into a new function in tsygTraceTestCase"""
    dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])

    trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                      lon = np.ones_like(dates, dtype=float) * lon,
                      rho = np.ones_like(dates, dtype=float) * rho,
                      coords = 'geo', datetime = dates)
    
    if lat < 0:
        lat_string = "{}S".format(-1 * lat)
    else:
        lat_string = "{}N".format(lat)

    print("    def test_{}_{}_{}(self):".format(lat_string, lon, rho))
    print("        \"\"\"Test for latitude = {}, longitude = {}, rho = {}\"\"\"".format(lat, lon, rho))
    print("        lat = {}".format(lat))
    print("        lon = {}".format(lon))
    print("        rho = {}\n".format(rho))
    print("        expected_latNH = np.array([{}])".format(",".join(trace.latNH.astype('str'))))
    print("        expected_lonNH = np.array([{}])".format(",".join(trace.lonNH.astype('str'))))
    print("        expected_rhoNH = np.array([{}])".format(",".join(trace.rhoNH.astype('str'))))
    print("        expected_latSH = np.array([{}])".format(",".join(trace.latSH.astype('str'))))
    print("        expected_lonSH = np.array([{}])".format(",".join(trace.lonSH.astype('str'))))
    print("        expected_rhoSH = np.array([{}])".format(",".join(trace.rhoSH.astype('str'))))    
    
class tsygTraceTestCase(unittest.TestCase):
    def test_0N_0_60000(self):
        """Test for latitude = 0, longitude = 0, rho = 60000"""
        lat = 0
        lon = 0
        rho = 60000

        expected_latNH = np.array([64.59375046694545,64.63297965844342,64.67236252919771,64.71158489050651,64.7498954215611,64.78896751870816,64.83363354078547,64.87768484583746,64.92112143386416,64.96540838044253,65.00932308171112,65.06073220804652,65.11130463620859,65.16243030969342,65.21339888882734,65.264406741549,65.30801579185224,65.3523266440927,65.39675190200175,65.44066148062848,65.48360971012951,65.52102548640283,65.55828929096714,65.59521158607294,65.63117423960034,65.66807262904405,65.70747257527127,65.7470757196263,65.785200128026,65.82441565914564,65.86339042609703,65.90616619332152,65.94770740385354,65.98987016160002,66.03200559858983,66.07374829970237,66.11229447228334,66.15214350344849,66.19117632700781,66.23054041474188,66.26792033252207,66.31657689262195,66.36463581116945,66.41259739952129,66.45917587456618,66.50655860438586,66.55490780597309,66.60307088490543,66.64941030332938,66.69691939164869,66.7441808856106])
        expected_lonNH = np.array([339.2212631664132,339.2648670940746,339.3084163802226,339.35204762864066,339.4044215191963,339.4482713336678,339.50856824366065,339.56911104046367,339.63839647940426,339.6991851630174,339.7601104504139,339.8701584583211,339.98952284425627,340.1005817201607,340.2121323696853,340.32401086829015,340.4613796328774,340.5903062836506,340.719724708044,340.84974418908433,340.98957182177287,341.11216005699623,341.23515810356986,341.3585386407369,341.49170000879553,341.615900168663,341.7391714228034,341.86271588451064,341.9962870639194,342.12073311059703,342.2454796855981,342.41309252783026,342.59103261608743,342.75982025085676,342.92909965924633,343.09889816201286,343.27713877859355,343.4457351680661,343.6148506519156,343.7842120225753,343.96428312985347,344.14230518038073,344.3210375705816,344.50023441364607,344.69046884240925,344.871004402551,345.06145739736763,345.2525114488312,345.45495825583043,345.64748762815475,345.84067269863937])
        expected_rhoNH = np.array([6371.198101234436,6371.195822715759,6371.197341728211,6371.1984809875485,6371.1965822219845,6371.195063209533,6371.199240493775,6371.195442962647,6371.195822715759,6371.197721481323,6371.196202468872,6371.195442962647,6371.197341728211,6371.196961975097,6371.195822715759,6371.198101234436,6371.197341728211,6371.195063209533,6371.198860740661,6371.196961975097,6371.196202468872,6371.1965822219845,6371.197721481323,6371.195822715759,6371.196202468872,6371.1984809875485,6371.195822715759,6371.199240493775,6371.195822715759,6371.1965822219845,6371.1965822219845,6371.196961975097,6371.1984809875485,6371.196202468872,6371.196961975097,6371.196202468872,6371.195442962647,6371.199620246887,6371.195442962647,6371.199620246887,6371.196961975097,6371.1984809875485,6371.195822715759,6371.195822715759,6371.197721481323,6371.195442962647,6371.196202468872,6371.197341728211,6371.196202468872,6371.195442962647,6371.196202468872])
        expected_latSH = np.array([-69.12013037660569,-69.1072349794527,-69.09435324267807,-69.08136222287669,-69.07148576933687,-69.05850840991383,-69.05345406992802,-69.04844071107723,-69.04643263546126,-69.04141927661047,-69.03643323851637,-69.03372848360505,-69.03408365344188,-69.03137889853056,-69.02868780399757,-69.02596938870789,-69.03196629479916,-69.03508086106069,-69.0381544461872,-69.04125535207038,-69.04730689967502,-69.04404206925176,-69.04081821996351,-69.03756704991858,-69.03722554046007,-69.03404267230687,-69.02547761508765,-69.01684425597676,-69.01114787820896,-69.00254183985476,-68.99396312225721,-68.98489263103943,-68.97863617775971,-68.96956568654193,-68.96052251608083,-68.95142470410639,-68.93649391058074,-68.9187763998737,-68.90097692689667,-68.88321843505463,-68.86815103774558,-68.84245586608799,-68.81670605291706,-68.79084695671938,-68.767651634298,-68.74160129280358,-68.71821472508546,-68.69463691207059,-68.67364091056197,-68.64994015414203,-68.62623939772206])
        expected_lonSH = np.array([39.29865793692185,39.30270482400508,39.306710729953295,39.31082591892823,39.30287899382892,39.30694637147966,39.27812638827679,39.249057103169214,39.207669571893526,39.17835098488125,39.14894019031517,39.09774109229676,39.033769540530415,38.981849857554565,38.9296364764444,38.8771362273891,38.818359034486555,38.771667861320346,38.72477178247904,38.677640062111365,38.61751732194233,38.60250456614664,38.58738594241882,38.572294639447676,38.544406977066515,38.52912442879861,38.50864752166691,38.48809206735976,38.454651461183374,38.43401745970077,38.41340736388025,38.39415989079916,38.36187700168709,38.34239730217421,38.323016640404305,38.30360865787771,38.25990569247339,38.229296199707974,38.19869353713173,38.16808745946091,38.124254720462346,38.041308903181715,37.95837333118483,37.8754275139042,37.77927894095793,37.6961726142318,37.6054062303515,37.51447250683653,37.41025748048048,37.31914275695251,37.22819195796462])
        expected_rhoSH = np.array([6371.187847900391,6371.198101234436,6371.186328887939,6371.193923950195,6371.192784690857,6371.186328887939,6371.199240493775,6371.186708641052,6371.19050617218,6371.19050617218,6371.187468147277,6371.1946834564205,6371.186328887939,6371.193164443969,6371.188607406616,6371.188607406616,6371.197721481323,6371.185949134827,6371.191645431519,6371.190126419067,6371.185189628601,6371.195063209533,6371.188607406616,6371.186708641052,6371.197341728211,6371.187088394165,6371.188987159729,6371.192784690857,6371.185189628601,6371.193164443969,6371.188227653503,6371.185949134827,6371.1946834564205,6371.188607406616,6371.185189628601,6371.196202468872,6371.188227653503,6371.1844301223755,6371.197721481323,6371.186328887939,6371.185189628601,6371.193164443969,6371.185189628601,6371.193923950195,6371.184050369263,6371.199240493775,6371.183670616149,6371.198101234436,6371.1844301223755,6371.192404937744,6371.185569381713])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)


    def test_30N_0_60000(self):
        """Test for latitude = 30, longitude = 0, rho = 60000"""
        lat = 30
        lon = 0
        rho = 60000

        expected_latNH = np.array([70.17984629284976,70.20715851179335,70.23443999488568,70.26168391193757,70.28902345163783,70.31617686868321,70.34721666336634,70.37821035427257,70.40928429990154,70.44012089645685,70.47090797414069,70.5095361089917,70.54826328158566,70.58661820886988,70.62486043803277,70.66302070492563,70.69651936770997,70.72962358706972,70.76263730642297,70.79551783708742,70.82853497153526,70.8560623414377,70.88349067359718,70.91078069442597,70.93819195111253,70.96520534927993,70.99490130424385,71.0244538252352,71.05421125190165,71.08354349929228,71.11272719006844,71.14649223023041,71.18035972322991,71.21362103694058,71.24668256761802,71.27951699450557,71.31078901562047,71.34143095178445,71.37182700113829,71.40203180519538,71.4323902885088,71.4688327628254,71.50501910504812,71.54098517367012,71.57711687437948,71.6125553108881,71.64851454932092,71.68426034434219,71.72017006390354,71.75534383058181,71.79022902176764])
        expected_lonNH = np.array([339.06375900415276,339.1053138750631,339.14686874597345,339.1884782583972,339.22374935527114,339.26544082996486,339.3237979662335,339.3822097440154,339.4342831062476,339.4928861293263,339.551571114675,339.6683400287256,339.7790164140365,339.89668691305747,340.014821864942,340.13333930742004,340.2605447505224,340.3949355526315,340.52981812836094,340.66527443998064,340.79458358134735,340.92512215676464,341.05604322277543,341.1874014208931,341.31242120346104,341.44454438276574,341.5792083924417,341.71433685498124,341.843044939701,341.9789110626709,342.11521431774764,342.2993835385279,342.4773782682984,342.66277692312923,342.8487493138503,343.03526811970505,343.2153938684966,343.4028415800784,343.59072642376714,343.77902107880607,343.9609226767818,344.15946261557576,344.35865825253,344.55845494613123,344.7520225072094,344.9530759556179,345.16421076324133,345.3760012690251,345.5816172837992,345.7947738274169,346.00864071070833])
        expected_rhoNH = np.array([6371.1984809875485,6371.1984809875485,6371.197721481323,6371.196961975097,6371.196961975097,6371.197341728211,6371.1965822219845,6371.1965822219845,6371.197341728211,6371.197341728211,6371.196961975097,6371.196961975097,6371.196961975097,6371.1984809875485,6371.197341728211,6371.198101234436,6371.197721481323,6371.1984809875485,6371.199240493775,6371.198860740661,6371.199240493775,6371.199620246887,6371.199620246887,6371.2,6371.199240493775,6371.199240493775,6371.198860740661,6371.198860740661,6371.198101234436,6371.198101234436,6371.1984809875485,6371.198101234436,6371.198101234436,6371.197721481323,6371.197341728211,6371.197341728211,6371.197721481323,6371.196961975097,6371.1965822219845,6371.196961975097,6371.1965822219845,6371.197721481323,6371.196961975097,6371.196961975097,6371.197721481323,6371.197721481323,6371.197341728211,6371.198101234436,6371.1984809875485,6371.198860740661,6371.199240493775])
        expected_latSH = np.array([22.227051809576622,22.24623781095518,22.265095963253586,22.283619436282663,22.237454187682545,22.25668800038531,22.275805699872166,22.294588720089706,22.24852592432714,22.268019284218354,22.287171134651075,22.30546238124836,22.25874388732548,22.277745473596454,22.296398720219756,22.314724117762907,22.268893548432118,22.28890600270026,22.30857694750989,22.327913213050195,22.281987021071032,22.300954456396155,22.319594042641114,22.33789211942758,22.290804795289517,22.309813211749656,22.327510231889164,22.344872572759343,22.296740229678264,22.314799249843773,22.33254408130746,22.34974249763755,22.301343777178843,22.319273023750128,22.336847100484576,22.35408649794968,22.30503207933066,22.322387590011658,22.339415251612493,22.356087743376506,22.30697868324411,22.323268684414586,22.339217176126567,22.35482415838004,22.304553966088747,22.32087128801591,22.33682660991707,22.352426761981377,22.302088267798382,22.318398759536365,22.334367741815853])
        expected_lonSH = np.array([1.5314334260753477,1.5154011578243296,1.4993786012485375,1.4833887015147145,1.5196519900873104,1.503604674075777,1.4865755183710543,1.4695555407330287,1.5048378433860816,1.4877767778913302,1.4707611758432417,1.4527956438919927,1.4871481870442775,1.4691378319766002,1.4511670706617676,1.4332067680741019,1.4662860145547083,1.447015276141752,1.4277938431568666,1.4085664337564576,1.441646320567299,1.423259237878213,1.4048882701667,1.3865430223862805,1.4204549116153937,1.4020700700821294,1.3837547043793286,1.3654270656803629,1.3993548564436378,1.3810074742291025,1.362681329634018,1.3433592580805807,1.3761882421611296,1.356795093951642,1.3374223295879586,1.3180965227748191,1.351348871862203,1.3324160143697508,1.3135283001588443,1.2946591555247435,1.3278519539003013,1.3079217820673215,1.2880450778089383,1.2681857691885972,1.300302385883055,1.28040294990134,1.260021238531199,1.2396562824688655,1.271183155017175,1.2508037915245611,1.2304272027962972])
        expected_rhoSH = np.array([377071.87353515625,377074.2796508789,377076.734375,377079.1890991211,377073.98800048826,377076.6128540039,377079.2134033203,377081.81395263673,377076.5399414062,377079.1890991211,377081.9354736328,377084.5603271484,377079.2377075195,377081.91116943356,377084.6575439453,377087.30670166016,377082.0812988281,377085.1679321289,377088.23026123043,377091.17106933595,377085.9456665039,377088.7406494141,377091.46271972655,377094.2333984375,377088.7892578125,377091.58424072264,377094.0389648437,377096.4936889648,377090.73359375,377093.38275146484,377095.9346923828,377098.4137207031,377092.7022338867,377095.2784790039,377097.80611572263,377100.3094482422,377094.4278320312,377096.8582519531,377099.21575927734,377101.57326660154,377095.52152099606,377097.7818115234,377099.75045166013,377101.8163085937,377095.61873779295,377097.7818115234,377099.9691894531,377101.8163085937,377095.64304199215,377097.8547241211,377099.9205810547])
        
        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)


    def test_60N_0_60000(self):
        """Test for latitude = 60, longitude = 0, rho = 60000"""
        lat = 60
        lon = 0
        rho = 60000

        expected_latNH = np.array([79.0975367873834,79.1150861046821,79.13261407763964,79.15011558361417,79.16756159430167,79.1849990672527,79.20623241783498,79.22743161747141,79.2485744680472,79.2696848752244,79.29076027768212,79.32463886973903,79.35843293820497,79.39212113873876,79.42572310813429,79.45923030865508,79.49167882985451,79.52400953029077,79.55626339109887,79.58846517171453,79.62063621647894,79.64983356763345,79.67896261689626,79.70798579822694,79.73710545597964,79.76594422220273,79.79774985184653,79.82948461827772,79.86128256395871,79.89276546716424,79.92413737979575,79.96224044385431,80.00034265413923,80.03793516155733,80.07534752273608,80.11248155370615,80.14927236767042,80.18549883725451,80.22142563228878,80.2571483754216,80.29291380723672,80.33390945640879,80.3746421432978,80.41507771695792,80.45565245572239,80.49548953405649,80.53638870680652,80.57698393613849,80.61772174566939,80.65763907872623,80.69721660987187])
        expected_lonNH = np.array([327.0792905203949,327.11182954160086,327.14455980810357,327.17731739536293,327.1929995096973,327.2259210214968,327.2786500818893,327.3315703875785,327.36738789958605,327.4205814128421,327.47385688836823,327.60485991664905,327.7191699625984,327.8517575947667,327.9851375288787,328.1195010102312,328.25886419005616,328.4169694089636,328.57619477889494,328.73651297909345,328.87989231015035,329.0428606237469,329.2067578430705,329.37180253417466,329.5191980164636,329.6862371228054,329.8651061167897,330.04501329952785,330.2073532357207,330.38963732429,330.5730415638832,330.8323428655335,331.0745140527455,331.337558298061,331.6022964302907,331.8689743362447,332.1197515618109,332.3916477322908,332.6653197519548,332.94052173399297,333.1980471864592,333.48906788661503,333.7822469265487,334.0777209100434,334.35540908093947,334.6553090270164,334.9713008987779,335.2897789593972,335.59058049044455,335.91405824953637,336.2400768389994])
        expected_rhoNH = np.array([6371.199620246887,6371.199240493775,6371.199240493775,6371.198860740661,6371.199240493775,6371.198860740661,6371.198860740661,6371.1984809875485,6371.199240493775,6371.1984809875485,6371.198860740661,6371.198860740661,6371.199240493775,6371.199240493775,6371.198860740661,6371.199240493775,6371.1984809875485,6371.198860740661,6371.199620246887,6371.1984809875485,6371.198860740661,6371.198860740661,6371.199240493775,6371.199240493775,6371.198860740661,6371.1984809875485,6371.199240493775,6371.199240493775,6371.1984809875485,6371.199620246887,6371.198860740661,6371.199620246887,6371.199620246887,6371.1984809875485,6371.198860740661,6371.199240493775,6371.199240493775,6371.1984809875485,6371.199240493775,6371.1984809875485,6371.199240493775,6371.199240493775,6371.199620246887,6371.198860740661,6371.1984809875485,6371.199240493775,6371.199240493775,6371.199620246887,6371.199620246887,6371.199620246887,6371.199620246887])
        expected_latSH = np.array([34.24096182375177,34.253549862392106,34.26583737270896,34.27775263771604,34.229019237988005,34.24163118229043,34.25304101329894,34.264129825416454,34.214518746380065,34.22627008684707,34.237731144274356,34.248317937487876,34.19807506595326,34.209286821475835,34.220146822256154,34.230767766415525,34.18006044201735,34.190879461662654,34.201377462416964,34.211598840509886,34.16111691235432,34.171864215013336,34.18221536670049,34.1923035561046,34.14176698643568,34.15256210041888,34.162230233189035,34.17160808291946,34.1204875320765,34.13059962714271,34.140377042939576,34.14955681718408,34.098367964449416,34.10831613497554,34.117970607367354,34.12725624954398,34.07637134022739,34.086507340955684,34.09633939826592,34.1058640970635,34.055153357570745,34.06346569779065,34.07143994364664,34.07916830269251,34.026831978177285,34.035325318410194,34.04316296048279,34.05076496102901,33.99844571198671,34.00678195786871,34.01480743014348])
        expected_lonSH = np.array([3.705020320460961,3.6828964839656435,3.6607389234112993,3.6385642873840296,3.6874774064646063,3.6653377751568335,3.640792636600746,3.616186026342129,3.6627090061000245,3.6381540491470057,3.6136165945537346,3.5872576138861865,3.631999194931178,3.6057080892685063,3.579412501294192,3.553049251758412,3.594482246480767,3.5649333540274113,3.535391718650048,3.5057465632180773,3.5471229954363683,3.518494470973671,3.4898300880178317,3.4611232298230914,3.5033502340364606,3.474688839288383,3.445240905568696,3.415699697078156,3.4570865880236137,3.427624140151941,3.3981277547778292,3.366171007198632,3.405032649141889,3.373088921610797,3.341072623319774,3.3090642224349787,3.3490221097400226,3.3181453858233336,3.2872791206338112,3.2563223554377863,3.2961908099533854,3.26219119548212,3.2281903003503847,3.194143728328575,3.2308399868615263,3.1968378110693223,3.1615434488635157,3.126152823679095,3.161515914663424,3.1262185642498563,3.0908467220856526])
        expected_rhoSH = np.array([369627.7646606445,369637.3162109375,369646.60041503905,369655.6415771484,369625.35854492185,369635.00731201173,369643.7811279297,369652.48203124997,369621.54278564453,369630.5839477539,369639.5035888672,369647.7913208008,369616.6333374023,369625.5286743164,369634.1080566406,369642.44439697266,369614.9077392578,369623.8516845703,369632.3581542969,369640.47575683595,369610.94615478517,369619.5741455078,369627.934790039,369635.9794799805,369605.91518554685,369614.4216552734,369622.61217041017,369630.486730957,369600.22800292965,369608.4185180664,369616.4389038086,369624.046118164,369593.3985229492,369601.37030029297,369609.12333984376,369616.5361206055,369585.8642211914,369594.05473632814,369601.75916748046,369609.48790283204,369578.7430908203,369586.47182617185,369593.9089111328,369601.1515625,369569.8963623047,369577.6737060547,369585.03787841793,369592.11040039064,369560.90380859375,369568.60823974607,369576.19114990236])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)

    def test_90N_0_60000(self):
        """Test for latitude = 90, longitude = 0, rho = 60000"""
        lat = 90
        lon = 0
        rho = 60000

        expected_latNH = np.array([84.14229828665555,84.15131029437855,84.16028900492935,84.1692719843484,84.17346273229101,84.18240942633008,84.19517419611519,84.20790609561492,84.21584064099636,84.22851960653003,84.2411878998931,84.26737954092599,84.28869613443877,84.31474562215955,84.34069607213738,84.3666115173957,84.39167148146046,84.4214873916217,84.45127256593165,84.48096638646146,84.50577875616882,84.53655601545572,84.56726369219045,84.59789879816525,84.62357817501038,84.65407795786226,84.68851961363886,84.722848998181,84.7521534979281,84.78626218198268,84.82023212781974,84.86767291424736,84.91000685360991,84.9570519159525,85.0038814004494,85.05049402644015,85.09144570626944,85.13712473077801,85.18255359960823,85.22772334813682,85.26770001846208,85.31520697234728,85.36239034602055,85.40917756872196,85.45064322028628,85.49670772359615,85.5444648331597,85.59185823514994,85.6338190754291,85.6802997933915,85.72633270707645])
        expected_lonNH = np.array([255.73632539421095,255.67977142788322,255.622834970962,255.56548870269057,255.50158545281593,255.4443757883279,255.36555540530597,255.2863525316905,255.20026482739166,255.12073410469603,255.04106677821702,254.8571434442469,254.66532441159626,254.47896953028163,254.290565592216,254.10104150312648,253.88124601563547,253.66573988694324,253.4481573807433,253.2274056667685,252.99916806546335,252.76855355832703,252.5352342962794,252.29890975099696,252.054689507034,251.81317401798233,251.54605897992147,251.27498243214202,250.99609214795206,250.71848593932606,250.43675429644136,250.1120197825423,249.77794156985863,249.44195090420735,249.0993759361962,248.75046255263527,248.40165845210106,248.04957586076523,247.69159198598652,247.3269145258212,246.95466921605552,246.50248337224397,246.04163684856488,245.57136466383116,245.0926503652833,244.6047016509776,244.08607172692018,243.5572784813778,243.0197425936978,242.46928398810815,241.90710477790273])
        expected_rhoNH = np.array([6371.2,6371.199240493775,6371.198860740661,6371.2,6371.200759506225,6371.199240493775,6371.199620246887,6371.2,6371.2,6371.199620246887,6371.199620246887,6371.2,6371.199620246887,6371.199620246887,6371.2,6371.199620246887,6371.199620246887,6371.199620246887,6371.2,6371.2,6371.199620246887,6371.2,6371.200759506225,6371.2,6371.199620246887,6371.199240493775,6371.2,6371.2,6371.199240493775,6371.2,6371.200759506225,6371.200759506225,6371.199620246887,6371.2,6371.199620246887,6371.2,6371.199240493775,6371.2,6371.2,6371.2,6371.2,6371.2,6371.2,6371.199240493775,6371.2,6371.199620246887,6371.199240493775,6371.2,6371.199620246887,6371.199620246887,6371.2])
        expected_latSH = np.array([47.544486685306204,47.55122466692242,47.55758015794512,47.56364878102267,47.510786531941356,47.517585985260105,47.52181045726176,47.52572757075076,47.47063184981086,47.47521149164935,47.47951109573187,47.48260517142589,47.42664543155597,47.43043960163991,47.43391275283287,47.43705463985107,47.37875897528501,47.380323088604946,47.381460315101755,47.38230042836966,47.32409355626282,47.32634410359434,47.32829753769696,47.32985140573314,47.27244366575918,47.27466689233402,47.27610123205972,47.27720772270526,47.21921941665185,47.22109088848444,47.222644756520616,47.2230579829654,47.16460180895385,47.165950771314925,47.166900167609555,47.167610507283236,47.11030863524142,47.112682125978,47.11483363556655,47.116544597953634,47.0595876504649,47.059112952317584,47.05838895226557,47.05738491445757,46.99775736300336,46.99764807997664,46.99663379688489,46.99530190999674,46.935486528340356,46.935052811328056,46.93450981128904])
        expected_lonSH = np.array([5.791035651950549,5.756712243823942,5.722305165880003,5.687765753020894,5.768920780078517,5.734572185629346,5.696477232420422,5.65820213297214,5.735513471074338,5.697460779660904,5.659333809940247,5.618563130123971,5.6932947911540195,5.652742677391185,5.612097075414085,5.571295232859722,5.6405584736855285,5.59470698690041,5.548805981243808,5.502688543967882,5.57183182959639,5.527048413642732,5.482137785415783,5.437168246807242,5.507260074956736,5.462479647210841,5.416120165106202,5.369575414120327,5.438118923762343,5.3917888968485,5.345322693038081,5.294993163478373,5.35955168462651,5.3092379498792575,5.258862316542651,5.208312940269034,5.27469597569921,5.2261760193827325,5.177641548914268,5.128896623242002,5.195070911015671,5.141759576996429,5.088336398629528,5.034762956100887,5.0960045666333365,5.042612551004524,4.98711854465864,4.931449514715274,4.990621151042387,4.935170260265639,4.8795533105146935])
        expected_rhoSH = np.array([353340.98607177736,353350.90218505857,353360.57525634766,353370.0781982422,353328.6881469726,353338.7014770508,353346.1871704101,353353.08956298826,353309.4635253906,353317.3137817383,353324.9939086914,353330.8755249023,353285.9370605469,353292.5964111328,353298.98841552733,353304.8943359375,353256.6018920898,353260.24752197263,353263.26124267577,353266.177746582,353218.0554321289,353222.3086669922,353225.954296875,353229.405493164,353182.13382568356,353186.21693115233,353189.0362182617,353191.66107177734,353143.4172363281,353146.69830322266,353149.8821533203,353150.31962890626,353099.91271972656,353101.2251464844,353102.1730102539,353103.0479614258,353053.66182861326,353056.1651611328,353058.4254516601,353060.3211791992,353011.39682617184,353011.4211303711,353011.4454345703,353010.95935058594,352959.92053222656,352960.47952880856,352959.77470703126,352958.9240600586,352907.66650390625,352907.54498291016,352907.3262451172])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)


    def test_30S_0_60000(self):
        """Test for latitude = -30, longitude = 0, rho = 60000"""
        lat = -30
        lon = 0
        rho = 60000

        expected_latNH = np.array([10.680794602588477,10.684018451876724,10.686941772841493,10.689591886239455,10.649129845596306,10.652483468478778,10.654498374283932,10.656185431008922,10.614487126125994,10.61689135271385,10.619008711356543,10.620934824702488,10.579134066982007,10.581695387920774,10.583935689968527,10.585909614638666,10.5431731210019,10.54510606453701,10.54673847974864,10.548152328906838,10.505142627703265,10.508202552451436,10.510975609254459,10.513482288679853,10.471285379987506,10.474475078329903,10.477514512510567,10.480273908935246,10.437947226648674,10.441451113692892,10.444661302602796,10.447891982080222,10.405708733766218,10.409649752917318,10.413303904123268,10.416794130789157,10.374781637204407,10.379337373380807,10.383606241612057,10.38773167587074,10.345493786043392,10.348949861763415,10.35219420161917,10.355213145232312,10.31158872700344,10.315290689533583,10.318664802983577,10.321895482460988,10.27786125288192,10.281795441843855,10.285483743995655])
        expected_lonNH = np.array([358.17749698129984,358.16471086717354,358.1519247530473,358.13905667665097,358.1903650576961,358.1775516228132,358.1666779616545,358.15574965898253,358.20907977602195,358.1982061148633,358.18733245370464,358.1773876982731,358.23170136255305,358.2218112486349,358.21189381396,358.2019217377718,358.258858194693,358.2515362319028,358.2441596275992,358.23675570253886,358.29371948021674,358.2853046871593,358.2768079318318,358.26828385574765,358.324182123915,358.31568536858754,358.3075437830969,358.29926559382284,358.3555736733404,358.3473774463364,358.339126577819,358.3325969169725,358.3906535249176,358.38412386407106,358.37753956171116,358.3709279385946,358.4281102823259,358.4206243949956,358.41311118690857,358.40551601655153,358.4626983602829,358.4570976051635,358.4514422085307,358.4457321703846,358.5048269670835,358.49914424969404,358.49436311727504,358.4895273433427,358.5496056872821,358.54485187561977,358.53998878093074])
        expected_rhoNH = np.array([360267.14815673826,360263.13796386716,360259.2735961914,360255.50644531247,360287.344946289,360283.3833618164,360280.32103271486,360277.4045288086,360310.5311523437,360307.2500854492,360304.06623535155,360301.0525146484,360334.6895263672,360331.26263427734,360327.68991699215,360324.554675293,360359.2610717773,360356.63621826173,360353.5981933594,360351.11916503904,360386.11721191404,360382.447277832,360378.77734375,360375.5205810547,360409.9839355469,360406.0466552734,360402.5225463867,360398.7553955078,360433.437487793,360429.4029907226,360425.5872314453,360422.0631225586,360456.9639526367,360452.5162841797,360448.7734375,360444.8604614258,360479.5182495117,360474.87614746095,360470.4284790039,360466.0051147461,360500.881640625,360496.70131835935,360492.90986328124,360489.3371459961,360524.99140625,360520.7624755859,360516.6793701172,360516.9710205078,360552.1635009766,360549.56295166013,360546.74366455077])
        expected_latSH = np.array([-75.7407556825041,-75.7348134179262,-75.72883017221326,-75.72279228498698,-75.71641288830219,-75.7103750010759,-75.71389937868761,-75.71742375629935,-75.72067492634429,-75.72430858698272,-75.72792858724284,-75.73190375733978,-75.73559205949158,-75.7396628522369,-75.74373364498223,-75.74779077734922,-75.75478489105933,-75.76218881611962,-75.7695927411799,-75.7769966662402,-75.78410006297702,-75.78466013848896,-75.78523387437923,-75.78575296875616,-75.78599885556628,-75.78657259145655,-75.78453719508389,-75.78243349681952,-75.78007025136671,-75.77804851537238,-75.77599945862138,-75.7687321373445,-75.76121892925747,-75.75397892873727,-75.7466842867037,-75.73933500315675,-75.7260707757886,-75.71303877485221,-75.69993847202412,-75.686797188061,-75.67342367766614,-75.65801477089857,-75.64252390186098,-75.62699205168838,-75.61120065432732,-75.59562782301967,-75.58173521824787,-75.56777431158437,-75.55352653697574,-75.53949732842051,-75.52537249721692])
        expected_lonSH = np.array([49.84138960010586,49.88885941483745,49.93651364467663,49.98444108208261,50.00603472514361,50.05448467202109,50.0691729938312,50.0838647307359,50.07197678648549,50.08705784417288,50.10218671318446,50.09974492055618,50.07034437127386,50.068069918280244,50.06544371054437,50.06285506884894,50.03859765201164,50.04194102961036,50.045205860033626,50.048590218767366,50.024025443417415,50.04824529421428,50.07276567333463,50.0972587316983,50.09389827862665,50.11863039361126,50.13620788544029,50.15356681121588,50.14312686706951,50.16084779287111,50.17865068094275,50.1924203423095,50.17796766202575,50.191949059256764,50.20593728667695,50.21989477824587,50.18345913411844,50.175583926005416,50.167609680149425,50.15969007580679,50.12335346942233,50.06135242723154,49.999433347310784,49.937418644741655,49.84677178917183,49.78500297341282,49.71712455344124,49.64929735988842,49.552844843524085,49.48524646130847,49.41763441871451])
        expected_rhoSH = np.array([6371.197721481323,6371.195442962647,6371.193923950195,6371.193164443969,6371.191265678405,6371.19050617218,6371.190126419067,6371.189746665955,6371.190885925293,6371.191265678405,6371.192404937744,6371.193164443969,6371.197721481323,6371.199620246887,6371.198101234436,6371.1965822219845,6371.192404937744,6371.191265678405,6371.191265678405,6371.189746665955,6371.189366912841,6371.189366912841,6371.189746665955,6371.188987159729,6371.191645431519,6371.192025184631,6371.194303703308,6371.195063209533,6371.199620246887,6371.197341728211,6371.196202468872,6371.195063209533,6371.191265678405,6371.190126419067,6371.189366912841,6371.188607406616,6371.188987159729,6371.188987159729,6371.189366912841,6371.19050617218,6371.193923950195,6371.197341728211,6371.198860740661,6371.194303703308,6371.19050617218,6371.188607406616,6371.187847900391,6371.188607406616,6371.19050617218,6371.193164443969,6371.1965822219845])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)


    def test_60S_0_60000(self):
        """Test for latitude = -60, longitude = 0, rho = 60000"""
        lat = -60
        lon = 0
        rho = 60000

        expected_latNH = np.array([-0.7024942908031448,-0.6976926678166251,-0.6933145165586581,-0.6893393464617077,-0.7245489716331264,-0.7196995373224127,-0.7178075749223183,-0.716284442737404,-0.7541646718742925,-0.7518833886915104,-0.749868482886356,-0.749438180968653,-0.7887049385070526,-0.7875438063481539,-0.7867036930802414,-0.7861914288924794,-0.8284429790981847,-0.8300549037423082,-0.8318512434940146,-0.8340300738392585,-0.8764933599092188,-0.8771968693937282,-0.8782418883367455,-0.8794918129548535,-0.9213198914320202,-0.9218458159981111,-0.9237924199115639,-0.926025891770152,-0.9691107250545912,-0.9705177440236241,-0.9723140837753306,-0.9761458198997133,-1.0210748042600528,-1.0240322761706722,-1.027303936783099,-1.0308078238273168,-1.0749786571897886,-1.0769252611032414,-1.0791314122051574,-1.081624431252223,-1.1258430759388744,-1.131156963113142,-1.136586963503305,-1.1423174922169466,-1.190197118298741,-1.1949714205285744,-1.2011322511599332,-1.2074843270880393,-1.2563543305994784,-1.261791161178806,-1.2674124068657306])
        expected_lonNH = np.array([357.02349553989114,357.00934338793087,356.99516391521394,356.98101176325366,357.04048905054617,357.0263368985859,357.01559984121064,357.004808142322,357.0677551657128,357.05701810833756,357.046308371719,357.03704663520443,357.1016055832394,357.09239848823825,357.0831640724804,357.07390233596584,357.14305117112303,357.13840664248744,357.1336801515818,357.1288990191628,357.19812981659004,357.19195532558035,357.18575351381395,357.17944241902086,357.2472252163441,357.240996083821,357.23564121551175,357.2302317056891,357.2989980502528,357.2935885404301,357.2881517098508,357.2856655209929,357.3573278657647,357.35478703539343,357.3521369219955,357.34948680859753,357.41964651175186,357.4154117944665,357.41120439793775,357.406915039139,357.47702010078,357.476337081863,357.47557210067595,357.47472515721887,357.54846387949834,357.54758961528455,357.54827263420157,357.54884637009184,357.62414237550206,357.62471611139233,357.62515324349926])
        expected_rhoNH = np.array([339794.8705078125,339791.58944091795,339788.84306640626,339786.704296875,339825.0563232422,339821.5808227539,339822.72312011715,339824.27858886716,339866.5678955078,339867.22410888673,339868.0504516601,339870.94265136716,339915.0061645508,339917.144934082,339919.5753540039,339922.5647705078,339971.5377319336,339978.4158203125,339985.48834228516,339993.14416503906,340042.38447265624,340047.73139648436,340053.27275390626,340059.1786743164,340106.8635131836,340111.96739501954,340118.48092041013,340125.50483398436,340174.52640380856,340180.40802001953,340186.8729370117,340196.5460083008,340248.48408203124,340256.9176391601,340266.03171386715,340275.41313476564,340325.35826416017,340332.09052734374,340339.33317871095,340346.8188720703,340396.8612182617,340407.65228271484,340418.4919555664,340429.8420166015,340484.3077270508,340494.4911865234,340506.69189453125,340519.1356445312,340574.86517333984,340586.26384277345,340597.95416259766])
        expected_latSH = np.array([-80.41959918850293,-80.4022231872544,-80.38479254449254,-80.36726627908229,-80.35598280657342,-80.33831993737977,-80.33164001237151,-80.32491910622821,-80.32449563449967,-80.31769276608634,-80.31083525615963,-80.30395042547627,-80.30345865185603,-80.29650551928097,-80.28953872632755,-80.28253095223911,-80.28463465050348,-80.28024966905633,-80.27585102723083,-80.27139774389198,-80.27346046102133,-80.26511396985558,-80.25674015793314,-80.24833902525404,-80.2464812137998,-80.23803909998566,-80.22947404276644,-80.22090898554725,-80.21888724955292,-80.21026755082039,-80.20164785208783,-80.19066490790243,-80.18626626607696,-80.17524234075654,-80.16420475505782,-80.1531398486024,-80.14947886720725,-80.13920626269555,-80.1289063374272,-80.1185654310238,-80.11482248735862,-80.1105467889382,-80.10624376976108,-80.1019134298273,-80.10419471301009,-80.09980973156294,-80.09664052378804,-80.09344399525648,-80.09683176908482,-80.09356693866155,-80.0902747874816])
        expected_lonSH = np.array([98.17487150695884,98.23977879464147,98.30455630872987,98.3691903888457,98.40939971248956,98.47430016998302,98.55294979827572,98.63153112467673,98.68594724179421,98.76532087013894,98.8446808381053,98.90475235185558,98.94060401480897,99.00129024558453,99.06194915560341,99.12234168824466,99.16773512546857,99.23799045127133,99.30818430537154,99.37827570663421,99.42436582315347,99.46292224101818,99.50153330039626,99.53987115220755,99.55401647397865,99.59283926922099,99.61466855380836,99.6364773478282,99.6340867816187,99.65616195301618,99.67812101119777,99.67656372806701,99.65064999035599,99.6493454242245,99.64793157506632,99.64633331080053,99.5763716831321,99.53130609498835,99.48583752568358,99.44036212618963,99.37038683814285,99.28549441694877,99.20063614670052,99.11542270661545,99.00513564208725,98.92016808881229,98.83586306388682,98.75146924650214,98.64151003105411,98.55715036461528,98.47257896231218])
        expected_rhoSH = np.array([6371.196202468872,6371.195822715759,6371.195063209533,6371.195063209533,6371.196202468872,6371.195442962647,6371.195442962647,6371.195822715759,6371.196202468872,6371.195063209533,6371.195063209533,6371.1946834564205,6371.195063209533,6371.196202468872,6371.195063209533,6371.195442962647,6371.195063209533,6371.195063209533,6371.195822715759,6371.195063209533,6371.1946834564205,6371.195442962647,6371.195822715759,6371.195063209533,6371.195442962647,6371.1946834564205,6371.195822715759,6371.195063209533,6371.195442962647,6371.195063209533,6371.195442962647,6371.196202468872,6371.195442962647,6371.195442962647,6371.196202468872,6371.195822715759,6371.196961975097,6371.197341728211,6371.196961975097,6371.197341728211,6371.1984809875485,6371.199620246887,6371.199620246887,6371.1984809875485,6371.196961975097,6371.1965822219845,6371.196202468872,6371.196202468872,6371.195063209533,6371.1946834564205,6371.1946834564205])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)

    def test_90S_0_60000(self):
        """Test for latitude = -90, longitude = 0, rho = 60000"""
        lat = -90
        lon = 0
        rho = 60000

        expected_latNH = np.array([-12.808027877599443,-12.979076304984062,-13.164181261680582,-13.315866102768226,-12.416473623050123,-12.579223370593184,-13.213433755785545,-13.839345461136347,-13.452483546546816,-14.051245249946817,-14.629290989594168,-15.416087800844622,-15.348646512979911,-16.122042493078794,-16.846800696098015,-17.581127994144424,-17.88578858207285,-18.93506273293771,-19.853873440466174,-20.77461026134057,-21.030571600486795,-21.85780996181289,-22.639682206671765,-23.337713879468723,-23.54028362987296,-24.203331073741126,-24.965375279439442,-25.693582727989522,-25.94321248177515,-26.604374793432385,-27.240101480620496,-27.98644991160613,-28.32595129449078,-29.00697579625441,-29.66934022120556,-30.26980947189807,-30.52061401822094,-31.027072545177376,-31.534514619374306,-32.009103483663466,-32.2034770070637,-32.81628157939724,-33.36795595865917,-33.88125833516396,-34.159602204220334,-34.56946819593445,-34.89078761524853,-35.20709367571182,-35.39500584015721,-35.68117710600241,-35.958045654198045])
        expected_lonNH = np.array([355.49011807122326,355.4970029019067,355.5121112803507,355.51664652595963,355.44370010562386,355.44809874744936,355.5440765656664,355.64040955372025,355.6633863100882,355.75354480713236,355.8394139453777,355.96459765248574,356.04688777160607,356.171306497527,356.288293977631,356.4136962507924,356.56565429944686,356.7546046526461,356.9154692679782,357.08761735581925,357.2337560833008,357.3851130753083,357.52977648192916,357.6531296983396,357.78782102877227,357.90784111286774,358.05132972695134,358.1929058880674,358.3341542001032,358.46073126580194,358.5843030482658,358.7336109835223,358.8964700140921,359.0332650427891,359.17115290175326,359.2920472500625,359.43769420392385,359.5337539844109,359.635359878504,359.72912471543,359.8586251020934,359.99083024366814,0.10453858655766407,0.20852302065805797,0.35878522138699476,0.42696192852624065,0.45543861468203695,0.48535991252771743,0.5997951963987853,0.6229003389787633,0.645179882442816])
        expected_rhoNH = np.array([312165.0061889648,311824.7717041015,311692.6297729492,311433.15814208984,312780.4128173828,312417.08934326173,311539.70775146486,310755.4841552734,311410.6767578125,310614.34967041016,309826.0672729492,308792.7013305664,309079.7096191406,308128.07869873045,307290.410168457,306703.4151489258,306440.5895385742,305490.87864990236,304513.6311035156,303960.7591796875,303928.26446533203,303400.2557373047,302979.9389160156,302423.25123291014,302508.2187133789,302104.16140136716,301739.938671875,301588.3047729492,301536.58543701173,301349.32158203126,301264.9860107422,301117.0949584961,301077.308984375,300993.5810180664,301119.2580322265,301120.81350097654,301296.5328613281,301194.8927001953,301314.71240234375,301428.1887084961,301517.7496826172,301835.1625244141,301978.9704711914,302095.6792358398,302250.47268066404,301891.91282958986,300719.23521728517,299689.63642578124,299259.52501220704,298259.4801269531,297342.2396484375])
        expected_latSH = np.array([-75.09847201371281,-75.07509910637302,-75.05167155751985,-75.02817570677502,-75.01167396974029,-74.98808249634706,-74.96914921196776,-74.95016128607514,-74.93819479464926,-74.91911124610826,-74.89997305605388,-74.88188671513169,-74.8708627898113,-74.85269448661904,-74.83447154191347,-74.81620761607286,-74.80798406831215,-74.79260248230128,-74.77715259439873,-74.76167538573947,-74.75336987570873,-74.74229130887497,-74.73119908166288,-74.72012051482912,-74.71622730700221,-74.70508043827675,-74.69661100370593,-74.68816888989178,-74.68693945584118,-74.6784427005137,-74.66993228480786,-74.66355288812306,-74.66444081271516,-74.65802043489535,-74.65158639669721,-74.64516601887738,-74.64975590599963,-74.64702383033162,-74.64427809428528,-74.64153235823895,-74.64613590573953,-74.65030232113324,-74.65449605728364,-74.6587171141907,-74.67026013388801,-74.67442654928172,-74.67912571943069,-74.68383854995801,-74.69592798478891,-74.7006271549379,-74.7053399854652])
        expected_lonSH = np.array([142.56377914925147,142.54589771400438,142.52800261837893,142.51013484351017,142.51064027750877,142.49274518188332,142.50681537157357,142.52081725937208,142.5532469975513,142.56735816837656,142.58144201844513,142.57862798050706,142.59409152878797,142.59127749084993,142.58849077366858,142.58564941497386,142.61641258699558,142.628843531285,142.6414384001145,142.6538966651606,142.68463251642567,142.67400474207713,142.6632130431885,142.65239402354322,142.65993455238691,142.64926579690334,142.63264111646353,142.61582519072695,142.61739613423606,142.60083975568796,142.58417409411314,142.55827401678044,142.55061054453168,142.5247787690907,142.49889235213635,142.47296495404697,142.4479254805497,142.4047450246169,142.36135966300895,142.31798796177938,142.29262063920197,142.24952214553917,142.20630070847133,142.16280606383668,142.1375207035293,142.09408070040803,142.05357767862986,142.01278778890654,141.9902891457805,141.94952657681387,141.9086137436855])
        expected_rhoSH = np.array([6371.199620246887,6371.199620246887,6371.199620246887,6371.199620246887,6371.2,6371.199620246887,6371.199240493775,6371.199240493775,6371.2,6371.199240493775,6371.199620246887,6371.198860740661,6371.2,6371.2,6371.199620246887,6371.199240493775,6371.198860740661,6371.199240493775,6371.2,6371.199240493775,6371.199240493775,6371.2,6371.199620246887,6371.199240493775,6371.199620246887,6371.199620246887,6371.2,6371.1984809875485,6371.198860740661,6371.199240493775,6371.199620246887,6371.198860740661,6371.199620246887,6371.199240493775,6371.198860740661,6371.199240493775,6371.199620246887,6371.199240493775,6371.1984809875485,6371.199240493775,6371.199240493775,6371.199240493775,6371.198860740661,6371.1984809875485,6371.199620246887,6371.199240493775,6371.199240493775,6371.2,6371.199620246887,6371.199620246887,6371.2])

        dates = np.array([dt.datetime(i,1,1) for i in np.arange(1965,2016)])
        
        trace = tsygTrace(lat = np.ones_like(dates, dtype=float) * lat,
                          lon = np.ones_like(dates, dtype=float) * lon,
                          rho = np.ones_like(dates, dtype=float) * rho,
                          coords = 'geo', datetime = dates)
                          
        np.testing.assert_allclose(trace.latNH, expected_latNH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonNH, expected_lonNH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoNH, expected_rhoNH, rtol = 0.005)
        np.testing.assert_allclose(trace.latSH, expected_latSH, rtol = 0.005)
        np.testing.assert_allclose(trace.lonSH, expected_lonSH, rtol = 0.005)
        np.testing.assert_allclose(trace.rhoSH, expected_rhoSH, rtol = 0.005)